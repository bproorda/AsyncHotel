// <auto-generated />
using AsyncHotel.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace AsyncHotel.Migrations
{
    [DbContext(typeof(HotelDbContext))]
    [Migration("20200529203814_FixedHotelRoomCK")]
    partial class FixedHotelRoomCK
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("AsyncHotel.Models.Amenity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Amenities");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            name = "Hot Tub"
                        },
                        new
                        {
                            Id = 2,
                            name = "Kitchenette"
                        },
                        new
                        {
                            Id = 3,
                            name = "Dining"
                        },
                        new
                        {
                            Id = 4,
                            name = "Netflix"
                        },
                        new
                        {
                            Id = 5,
                            name = "Safe"
                        });
                });

            modelBuilder.Entity("AsyncHotel.Models.Hotel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StreetAddress")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Hotels");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            City = "Munising",
                            Country = "USA",
                            Name = "The Superior Hotel",
                            Phone = "387-555-1987",
                            State = "Michigan",
                            StreetAddress = "1 Cherry Street"
                        },
                        new
                        {
                            Id = 2,
                            City = "Copper Harbor",
                            Name = "Snowbound",
                            State = "Michigan"
                        },
                        new
                        {
                            Id = 3,
                            City = "Ashland",
                            Name = "Red Bay",
                            State = "Wisconsin"
                        },
                        new
                        {
                            Id = 4,
                            City = "Duluth",
                            Name = "Duluth Inn",
                            State = "Minnesota"
                        },
                        new
                        {
                            Id = 5,
                            City = "Grand Marais",
                            Name = "Last Stop",
                            State = "Minnesota"
                        });
                });

            modelBuilder.Entity("AsyncHotel.Models.HotelRoom", b =>
                {
                    b.Property<int>("HotelId")
                        .HasColumnType("int");

                    b.Property<int>("RoomNumber")
                        .HasColumnType("int");

                    b.Property<bool>("PetFriendly")
                        .HasColumnType("bit");

                    b.Property<double>("Rate")
                        .HasColumnType("float");

                    b.Property<int>("RoomId")
                        .HasColumnType("int");

                    b.HasKey("HotelId", "RoomNumber");

                    b.HasIndex("RoomId");

                    b.ToTable("HotelRooms");

                    b.HasData(
                        new
                        {
                            HotelId = 1,
                            RoomNumber = 101,
                            PetFriendly = true,
                            Rate = 90.5,
                            RoomId = 1
                        },
                        new
                        {
                            HotelId = 2,
                            RoomNumber = 102,
                            PetFriendly = true,
                            Rate = 90.5,
                            RoomId = 2
                        },
                        new
                        {
                            HotelId = 3,
                            RoomNumber = 103,
                            PetFriendly = true,
                            Rate = 90.5,
                            RoomId = 3
                        },
                        new
                        {
                            HotelId = 4,
                            RoomNumber = 104,
                            PetFriendly = true,
                            Rate = 90.5,
                            RoomId = 6
                        },
                        new
                        {
                            HotelId = 5,
                            RoomNumber = 101,
                            PetFriendly = true,
                            Rate = 90.5,
                            RoomId = 4
                        },
                        new
                        {
                            HotelId = 5,
                            RoomNumber = 201,
                            PetFriendly = true,
                            Rate = 90.5,
                            RoomId = 5
                        },
                        new
                        {
                            HotelId = 5,
                            RoomNumber = 301,
                            PetFriendly = true,
                            Rate = 90.5,
                            RoomId = 7
                        });
                });

            modelBuilder.Entity("AsyncHotel.Models.Room", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("layout")
                        .HasColumnType("int");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Rooms");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            layout = 1,
                            name = "Lake View"
                        },
                        new
                        {
                            Id = 2,
                            layout = 2,
                            name = "Forest View"
                        },
                        new
                        {
                            Id = 3,
                            layout = 3,
                            name = "Lake View Suite"
                        },
                        new
                        {
                            Id = 4,
                            layout = 5,
                            name = "Rustic Cabin"
                        },
                        new
                        {
                            Id = 5,
                            layout = 5,
                            name = "The Lost Camp"
                        },
                        new
                        {
                            Id = 6,
                            layout = 4,
                            name = "Lover's Leap"
                        },
                        new
                        {
                            Id = 7,
                            layout = 5,
                            name = "The Lighthouse"
                        });
                });

            modelBuilder.Entity("AsyncHotel.Models.RoomAmenity", b =>
                {
                    b.Property<int>("AmenityId")
                        .HasColumnType("int");

                    b.Property<int>("RoomId")
                        .HasColumnType("int");

                    b.HasKey("AmenityId", "RoomId");

                    b.HasIndex("RoomId");

                    b.ToTable("RoomAmenities");

                    b.HasData(
                        new
                        {
                            AmenityId = 1,
                            RoomId = 6
                        },
                        new
                        {
                            AmenityId = 2,
                            RoomId = 6
                        },
                        new
                        {
                            AmenityId = 3,
                            RoomId = 6
                        },
                        new
                        {
                            AmenityId = 4,
                            RoomId = 6
                        },
                        new
                        {
                            AmenityId = 5,
                            RoomId = 6
                        },
                        new
                        {
                            AmenityId = 4,
                            RoomId = 1
                        },
                        new
                        {
                            AmenityId = 4,
                            RoomId = 2
                        },
                        new
                        {
                            AmenityId = 4,
                            RoomId = 3
                        },
                        new
                        {
                            AmenityId = 4,
                            RoomId = 4
                        },
                        new
                        {
                            AmenityId = 4,
                            RoomId = 5
                        },
                        new
                        {
                            AmenityId = 4,
                            RoomId = 7
                        });
                });

            modelBuilder.Entity("AsyncHotel.Models.HotelRoom", b =>
                {
                    b.HasOne("AsyncHotel.Models.Hotel", "Hotel")
                        .WithMany("HotelRooms")
                        .HasForeignKey("HotelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AsyncHotel.Models.Room", "Room")
                        .WithMany()
                        .HasForeignKey("RoomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AsyncHotel.Models.RoomAmenity", b =>
                {
                    b.HasOne("AsyncHotel.Models.Amenity", "Amenity")
                        .WithMany("RoomAmenities")
                        .HasForeignKey("AmenityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AsyncHotel.Models.Room", "Room")
                        .WithMany("RoomAmenities")
                        .HasForeignKey("RoomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
